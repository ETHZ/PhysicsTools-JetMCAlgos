process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
#   replace MessageLogger.destinations = { "debugmessages.txt" }	
   replace MessageLogger.destinations = {"cout"}	
   replace MessageLogger.cout = { untracked string threshold = "ERROR" }

   untracked PSet maxEvents = {untracked int32 input = 10}

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
        '/store/relval/2008/6/6/RelVal-RelValTTbar-1212531852-IDEAL_V1-2nd-02/0000/081018D5-EC33-DD11-A623-000423D6CA42.root'
    }
  }

  module caloJetSele = CaloJetRefSelector{
    InputTag src = iterativeCone5CaloJets
    string cut = "pt > 20.0"
  }

  module genJetSele = GenJetRefSelector{
    InputTag src = iterativeCone5GenJets
    string cut = "pt > 20.0"
  }

# The matching routine OneToOne: algo options are "BruteForce" - "SwitchMode" - "MixMode"
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    string algoMethod = "SwitchMode"
  }

# A simple analyzer
  module printJet = matchOneToOne{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne1 = jetMatchOne:src2mtc
    InputTag matchMapOne2 = jetMatchOne:mtc2src
    untracked string HistOutFile = "myPlots1.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetSele, genJetSele, jetMatchOne, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

