process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.destinations = { "debugmessages.txt" }	
#   replace MessageLogger.destinations = {"cout"}	
   replace MessageLogger.cout = { untracked string threshold = "INFO" }

   untracked PSet maxEvents = {untracked int32 input = -1}

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
       '/store/RelVal/2007/9/27/RelVal-RelVal163QCD_Pt_80_120-1190921128/0000/260E473C-7F6D-DC11-AE08-000423D6CA6E.root',
       '/store/RelVal/2007/9/27/RelVal-RelVal163QCD_Pt_80_120-1190921128/0000/30F7FB57-7F6D-DC11-87C7-000423D99896.root'
     }
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 15.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 15.0
  }

# The matching routine OneToOne
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked int32 AlgoMethod = 1
  }

# A simple analyzer
  module printJet = jetTest{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne  = jetMatchOne
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatchOne, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

