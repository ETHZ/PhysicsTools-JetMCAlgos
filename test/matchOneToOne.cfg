process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
#   replace MessageLogger.destinations = { "debugmessages.txt" }	
   replace MessageLogger.destinations = {"cout"}	
   replace MessageLogger.cout = { untracked string threshold = "INFO" }

   untracked PSet maxEvents = {untracked int32 input = -1}

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/0A51E987-106D-DC11-A7CC-000423D98614.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/0CA7B604-0F6D-DC11-8767-000423D987E0.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/10A3E036-126D-DC11-96E1-0030485629C6.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/34CC59BA-136D-DC11-ACD6-000423D98B6C.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/9293DEF4-246D-DC11-A6AF-000423D992C4.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/A00A769A-126D-DC11-8FE6-000423D6A3EC.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/A0607EEE-196D-DC11-9461-000423D94700.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/ACE5A40A-1E6D-DC11-AD08-001617C3B71A.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/BABF0274-236D-DC11-9D54-000423D6A3E4.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/C0CD4424-0E6D-DC11-A53C-001617E30D24.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/D0A102F2-166D-DC11-BEE7-0016177CA778.root',
'/store/RelVal/2007/9/27/RelVal-RelValTTbar-1190897710/0004/D6DDFE1E-106D-DC11-842E-000423D99996.root'     }
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 20.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 20.0
  }

# The matching routine OneToOne
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    uint32 algoMethod = 1
  }

# A simple analyzer
  module printJet = matchOneToOne{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne  = jetMatchOne
    untracked string HistOutFile = "myPlots1.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatchOne, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

