process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cerr.default.limit = 10

   untracked PSet maxEvents = {untracked int32 input = 3}

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
        '/store/relval/2008/6/6/RelVal-RelValTTbar-1212531852-IDEAL_V1-2nd-02/0000/081018D5-EC33-DD11-A623-000423D6CA42.root'
     }
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 20.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 20.0
  }

# The matching routine OneToOne: algo options are "BruteForce" - "SwitchMode" - "MixMode"
  module jetMatchOne = CandOneToOneDeltaRMatcher {
#    InputTag src      = genJetSele
#    InputTag matched  = caloJetSele
    InputTag src      = iterativeCone5GenJets
    InputTag matched  = iterativeCone5CaloJets
    string algoMethod = "SwitchMode"
  }

# The matching routine OneToMany
  module jetMatchMany = CandOneToManyDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

# A simple analyzer
  module printJet = jetMatch{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne  = jetMatchOne:src2mtc
    InputTag matchMapMany = jetMatchMany
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatchOne, jetMatchMany, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

