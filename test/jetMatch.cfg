process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "DEBUG"
   replace MessageLogger.cerr.default.limit = 10

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
       "file:/afs/cern.ch/user/s/santocch/public/ttbar_qqblnb_reco.root"
     }
    untracked int32 maxEvents   = -1
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 20.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 20.0
  }

# The matching routine OneToOne
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

# The matching routine OneToMany
  module jetMatchMany = CandOneToManyDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

# A simple analyzer
  module printJet = jetTest{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne  = jetMatchOne
    InputTag matchMapMany = jetMatchMany
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatchOne, jetMatchMany, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

