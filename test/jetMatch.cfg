process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cerr.default.limit = 10

   untracked PSet maxEvents = {untracked int32 input = 3}

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
        '/store/RelVal/2007/6/4/RelVal-RelVal150pre5TTbar-1180981428/0000/8EA0C740-0513-DC11-8880-001731AF684D.root'
     }
  }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 20.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 20.0
  }

# The matching routine OneToOne
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    uint32 algoMethod = 1
  }

# The matching routine OneToMany
  module jetMatchMany = CandOneToManyDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

# A simple analyzer
  module printJet = jetTest{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMapOne  = jetMatchOne:src2mtc
    InputTag matchMapMany = jetMatchMany
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatchOne, jetMatchMany, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

